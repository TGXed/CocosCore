const { Command, Utils } = require('../index');

class BallCommand extends Command {}

module.exports = new BallCommand({
    trigger: /^—à–∞—Ä(?:\s+(.*)|$)/i,
    name: '—à–∞—Ä',
    description: '—à–∞—Ä —Å—É–¥—å–±—ã',
    emoji: 'üîÆ',
    handler(ctx) {
         /*
         ctx.body –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã "—à–∞—Ä" –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
         ['—à–∞—Ä', undefined, index: 0, groups: undefined]

         —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—ã, —Ç–æ–≥–¥–∞ —Ç—Ä–∏–≥–≥–µ—Ä –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ /^—à–∞—Ä(?:\s+(?<text>.*)|$)/i
         ctx.body –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
         ['—à–∞—Ä', undefined, index: 0, groups: { text: undefined }]
         —ç—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤:
         if (!ctx.body.groups.text) return ctx.error('–≤–≤–µ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –º–∞–≥–∏—á–µ—Å–∫–æ–º—É —à–∞—Ä—É.');
         */
        if (!ctx.body[1]) return ctx.error('–≤–≤–µ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –º–∞–≥–∏—á–µ—Å–∫–æ–º—É —à–∞—Ä—É.');

        let phrases = ['–≤–æ–∑–º–æ–∂–Ω–æ.', '–¥–∞.', '–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ -- –¥–∞.', '–Ω–µ—Ç.', '—Å–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç', '–∑–∞–±—É–¥—å –æ–± —ç—Ç–æ–º.', '—Ç—É–º–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë.', '–¥–∞–∂–µ –Ω–µ –¥—É–º–∞–π.', '—è –¥—É–º–∞—é, –¥–∞', '–¥—É–º–∞—é, –Ω–µ—Ç.', '–ª—É—á—à–µ –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—Ç—å –æ–± —ç—Ç–æ–º.', '—Ç—ã —à—É—Ç–∏—à—å?', '–Ω–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ.', '–±—ã—Ç—å –º–æ–∂–µ—Ç.', '100% –¥–∞.', '—Å–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞'];

        ctx.send(Utils.getRandomElement(phrases));
    }
});
